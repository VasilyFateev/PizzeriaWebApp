@model AssortmentRequestVM
@{
	ViewData["Title"] = "Список ассортимента";
}

@foreach (var category in Model.Categories)
{
	@Html.AntiForgeryToken()
	<h2>
		@category.Id | @category.Name
		<a asp-action="CategoryEditPanel" asp-route-id="@category.Id" class="btn btn-primary">Edit</a>
	</h2>
	<table class="table table-striped">
		<thead>
			<tr>
				<th>ID</th>
				<th>Names</th>
				<th>Variations</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var product in category.Products)
			{
				<tr>
					<td>@product.Id</td>
					<td>@product.Name</td>
					@foreach (var variation in product.Variations)
					{
						<td>
							<div>@variation.Name</div>
							<div>
								@foreach (var option in variation.Options)
								{
									@if (option.Status)
									{
										<span class="text-success">[+] @option.Name</span>
									}
									else
									{
										<span class="text-danger">[-] @option.Name</span>
									}
									<br />
								}
							</div>
						</td>
					}
					<td>
						<a asp-action="ProductEditPanel" asp-route-id="@product.Id" class="btn btn-primary">Edit</a>
						<button class="btn btn-danger btn-sm" onclick="deleteProduct(@product.Id)">Delete</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
}

@section Scripts {
	<script>
		async function deleteProduct(id) {
			if (!confirm("Delete product?")) return;

			try {
				const response = await fetch(`/Assortment/DeleteProduct?id=${id}`, {
					method: "POST",
					headers: {
						"RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
					}
				});

				if (response.ok) {
					alert("Product deleted successfully!");
					location.reload();
				}
			} 
			catch (error) {
				alert("Error: " + error.message);
			}
		}
	</script>
}